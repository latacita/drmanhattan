%==================================================================%
% Author : Pando Mu침oz, Manuel                                     %
%          S치nchez Barreiro, Pablo                                 %
% Version: 1.0, 30/03/2011                                         %                   %                                                                  %
% Memoria del Proyecto Fin de Carrera                              %
% Archivo ra칤z para el cap칤tulo de descripci칩n general             %
%==================================================================%


\chapterheader{Descripci蚤 y Planificaci蚤}{Descripci蚤 y Planificaci蚤 del Proyecto}
\label{chap:planificacion}


El presente cap\'itulo describe \todo{a completar}

\chaptertoc

\section{Descripci蚤 Funcional del Sistema}
\label{sec:planificacion:descFuncional}

La presente secci蚤 describe el 炅bito funcional del sistema software que deseamos construir, es decir, del \emph{DrManhattan}, que es un \emph{Sistema de Control de Accesos a Red para los Laboratorios de la Facultad de Ciencias}.

%==========================================================================%
% NOTA(Pablo): Esta informaci蚤 se considera sabida, por lo que no hay
%              que aportarla
%==========================================================================%
Definirlas de modo correcto es muy importante, ya que los requisitos de alto nivel dependen directamente y si estos son incorrectos, obtendr칤amos una aplicaci칩n in칰til que no cumple con lo requerido.
\newline

El proyecto consiste en desarollar una aplicaci칩n que, utilizando la red local instalada en los laboratorios de la Facultad de Ciencias, sea capaz principalmente de, desde un computador distinguido, el del profesor, controlar el uso del resto de los computadores, los de los alumnos, que hagan de la red. Est치 especialmente orientado a denegar accesos no deseados durante pruebas evaluables, evitando por ejemplo, la realizaci칩n de un test pudiendo consultar dudas en internet, sin necesitar desconectar f칤sicamente la red.
\newline

Esto es deseable puesto que en ocasiones es necesario que los alumnos dispongan de ciertos archivos al comenzar, y recoger los archivos resultantes al final de la prueba, con esta aplicaci칩n se permite, aprovechando la conexi칩n existente entre computadores, el env칤o y recogida de estos archivos, garantizando transferencias correctas, de un modo m치s c칩modo y sencillo, que el profesor vaya con un dispositivo de almacenamiento recogiendo los resultados individualmente cuando un alumno finaliza.
\newline

El componente que se ejecutar치 en el computador del profesor ha de ser capaz de permitir conectarse a todos los alumnos que vayan a realizar la prueba, y como se ha comentado, al principio de la misma, si se desea, enviar un archivo dado, a los alumnos conectados a modo de enunciado, y notificar al resto de computadores el inicio de la prueba y que, por tanto, el acceso a la red ya no est치 permitido, del mismo modo, cuando cada alumno decide que ha acabado, en caso de que entreguen ficheros como resultado, recogerlos y almacenarlos en el computador del profesor, en un directorio seleccionado por 칠l, sin necesidad de intervenci칩n del mismo, adem치s de volver a permitir el acceso a la red al computador del alumno que concluye la prueba.
\newline

Cuando el profesor decide iniciar una prueba puede optar por establecer una hora l칤mite para la finalizaci칩n autom치tica, o no, en ambos casos se permite concluirlo manualmente por el profesor.
\newline

Adem치s, se guardar치n registros de cada prueba con el fin de tener una noci칩n de lo que est치 ocurriendo en la prueba actual o en alguna pasada, por ejemplo, la hora a la que empieza, a la que finaliza, cu치ndo acaba un alumno, si se recogen ficheros de resultados, d칩nde se almacenan.
\newline

Las funcionalidades m치s importantes presentadas al usuario en el componente a ejecutar por el alumno son dos, conectarse al computador del profesor y enviar el archivo de resultados al decidir finalizar la prueba.
\newline

Tanto el profesor como los alumnos dispondr치n de interfaces gr치ficas sencillas e intuitivas para facilitar lo m치ximo posible el uso de la aplicaci칩n.


\section{Metodolog칤a de Desarrollo}
\label{sec:planificacion:metodologia}

\section{Requisitos de Alto Nivel del Sistema}
\label{sec:planificacion:requisitos}

En esta secci칩n se enumeran los requisitos de alto nivel del sistema.
Un requisito es una propiedad que debe ser exhibida por un software para resolver un problema particular.
Los requisitos han de tener ciertas caracter칤sticas, entre ellas ser:
\begin{itemize}

\item \emph{No ambig칲os,} no puede haber varias interpretaciones para un requisito puesto que se puede optar por una soluci칩n no deseada por el cliente.

\item \emph{Entendible,} se comprende f치cilmente el significado.

\item \emph{Verificable,} es necesario que existan t칠cnicas para comprobar que cada requisito es construido correctamente.

\end{itemize}


El conjunto de requisitos ha de ser, entre otras cosas:

\begin{itemize}

\item \emph{Completo,} de tal forma que todo lo que deba hacer la aplicaci칩n est칠 recogido.
\item \emph{Consistente,} no deben existir conflictos entre requisitos.
\item \emph{No redundante,} es decir, que un problema s칩lo lo resuelva un 칰nico requisito.

\end{itemize}


Requisitos de alto nivel:

\begin{enumerate}

\item Profesor - Comenzar prueba
\item Profesor - Enviar enunciado
\item Profesor - Establecer hora fin prueba
\item Profesor - Finalizar prueba
\item Denegar acceso a red al comenzar
\item Permitir acceso a red al finalizar
\item Comprobaci칩n de integridad de los archivos transmitidos
\item Crear y guardar logs en el computador profesor
\item Alumno - Conectarse a profesor
\item Alumno - Enviar resultado

\end{enumerate}
